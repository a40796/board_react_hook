[{"/Users/pinghunghuang/Desktop/boardapp/src/index.js":"1","/Users/pinghunghuang/Desktop/boardapp/src/components/App/App/index.js":"2","/Users/pinghunghuang/Desktop/boardapp/src/components/App/App/App.js":"3"},{"size":213,"mtime":1622783455141,"results":"4","hashOfConfig":"5"},{"size":99,"mtime":1622705720568,"results":"6","hashOfConfig":"5"},{"size":4927,"mtime":1622813789005,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lsnft0",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/pinghunghuang/Desktop/boardapp/src/index.js",[],"/Users/pinghunghuang/Desktop/boardapp/src/components/App/App/index.js",[],["16","17"],"/Users/pinghunghuang/Desktop/boardapp/src/components/App/App/App.js",["18","19"],"import React ,{useState,useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments'\n\nconst Page = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: \"monospace\", \"微軟正黑體\";\n  box-shadow: 0px 0px 16px rgb(199, 197, 197);\n  border-radius: 8px;\n  padding: 12px 28px;\n  color: #6c6c6c;\n  box-sizing: border-box;\n\n`\nconst Title =styled.h1`\n  text-align: center;\n   color: #333;\n`\nconst MessageForm = styled.form`\n   margin-top: 16px;\n`\nconst MessageTextArea = styled.textarea`\n     border: 1px solid black;\n     width: 100%;\n     height: 30vh;\n`\nconst SubmitButton = styled.button`\n   margin-top: 8px;\n  color: #ddd;\n  background-color: #343a40;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  font-size: 16px;\n  padding: 6px 12px;\n`\nconst MessageList = styled.div`\n   margin-top: 16px;\n`\n\nconst MessageContainer =styled.div`\n      border: 1px solid black;\n      padding: 5px;\n      border-radius: 5px;\n      &+&{\n          margin-top: 8px;\n      }\n`\nconst MessageHead =styled.div`\n     display: flex;\n     align-items: center;\n     justify-content: space-between;\n     border-bottom: 1px solid rgba(0,0,0,.3);\n     padding-bottom: 5px;\n`\nconst MessageAuthor =styled.div`\n      color: rgba(23,78,55,0.3);\n`\nconst MessageTime =styled.div`\n\n`\nconst MessageDeleteBtn=styled.button`\n      width: 6vw;\n      height: 3vh;\n`\nconst MessageBody =styled.div`\n     margin-top: 16px;\n     font-size: 16px;\n`\nconst ErrorMessage = styled.div `\n     margin-top: 30px;\n     color: red;\n\n`\n\n\nfunction Message({author,time,children,handleDeleteMessage,item}){\n    return(\n        <MessageContainer>\n            <MessageHead>\n                <MessageAuthor>{author}</MessageAuthor>\n                <MessageTime>{time}</MessageTime>\n                <MessageDeleteBtn onClick={()=>{\n                    handleDeleteMessage(item.id)\n                }} >DELETE</MessageDeleteBtn>\n            </MessageHead>\n            <MessageBody>{children}</MessageBody>\n        </MessageContainer>\n    )\n}\n\n\nconst App = () => {\n    const [messages,setMessages]=useState([]);\n    const [messageApiError,setApiError]=useState(null);\n    const [value,setValue]=useState('');\n    const [postMessageError,setPostMessageError] = useState();\n    const [isRequestPosstMsg,setIsRequestPosstMsg] = useState(false);\n\n    const fetchMessages = ()=>{\n        fetch(API_ENDPOINT)\n        .then((res) =>res.json())\n        .then((data) =>{\n           setMessages(data)\n        })\n        .catch((err) =>{\n           setApiError(err.Message)\n        })\n    }\n  \n    useEffect(()=>{\n        fetchMessages()\n    },[])\n\n    const handleChange =(e)=>{\n        setValue(e.target.value)\n    }\n    const handleFormSubmit =(e)=>{\n         e.preventDefault();\n         fetch('https://student-json-api.lidemy.me/comments',{\n            method:'POST',\n            headers:{\n                \"content-type\":\"application/json\",\n            },\n            body:JSON.stringify({\n                nickname:'albert',\n                body:value,\n            })\n        })\n        .then((res)=>res.json())\n        .then((data)=>{\n            if(data.ok === 0){\n                setPostMessageError(data.Message);\n                return\n            }\n             fetchMessages()\n        });  \n    }\n    useEffect(()=>{\n        fetchMessages()\n    },[])\n\n    const handleTextareaFocus =()=>{\n        setPostMessageError(null)\n    }\n\n    const handleDeleteMessage =(id)=>{\n         fetch('https://student-json-api.lidemy.me/comments/'+ id,{\n             methods:'DELETE',\n         })\n         .then((res)=>res.json())\n         .then(()=>{\n            setMessages(messages.filter((message)=>message.id !== id));\n         })\n         .catch((err)=>{\n             console.log(err);\n         })\n    }\n\n    return (\n        <Page>\n           <Title>留言板</Title>\n           <MessageForm onSubmit={handleFormSubmit} >\n               <MessageTextArea value={value} onFocus={handleTextareaFocus} onChange={handleChange} rows={10} />\n               <SubmitButton>送出留言</SubmitButton>\n               {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage> }\n           </MessageForm>\n           {messageApiError && (\n               <ErrorMessage>\n                   Something went wrong. {messageApiError.toString()}\n               </ErrorMessage>\n               \n           )}\n           <MessageList>\n                {\n                    messages.map(function(item){\n                          return (\n                            <Message key={item.id} author={item.nickname} time={item.createdAt} handleDeleteMessage={handleDeleteMessage} item={item} >\n                             {item.body}\n                            </Message>\n                          )\n                    })\n                }              \n           </MessageList>\n        </Page>\n    )\n}\n\nexport default App\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":99,"column":12,"nodeType":"26","messageId":"27","endLine":99,"endColumn":29},{"ruleId":"24","severity":1,"message":"28","line":99,"column":30,"nodeType":"26","messageId":"27","endLine":99,"endColumn":50},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'isRequestPosstMsg' is assigned a value but never used.","Identifier","unusedVar","'setIsRequestPosstMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]